{"version":3,"sources":["img/logo.svg","js/services/Video.service.js","components/Logo.jsx","components/Search.jsx","components/Avatar.jsx","components/ProfileMenu.jsx","components/Header.jsx","components/Slider.jsx","components/Card.jsx","js/utils/wrapText.js","components/Container.jsx","views/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","VideoService","this","API_KEY","process","idVideos","query","Axios","get","params","part","type","maxResults","q","key","data","items","forEach","video","push","id","videoId","getVideos","videosWithChannel","console","error","toString","videos","getChannels","idChannels","snippet","channelId","Set","channels","channel","filter","thumbnail","thumbnails","default","url","Logo","className","src","props","alt","Component","Search","state","event","videoService","searchVideos","target","value","search","placeholder","onKeyDown","handleFormSearch","bind","Avatar","avatar","ProfileMenu","href","Header","name","logo","Slider","slider","setState","Swiper","sliderID","config","setSlider","update","children","Card","NO_DESCRIPTION","link","title","description","computedDescription","high","tag","computedTags","tags","count","slice","trim","rel","hasTag","Container","undefined","wrap","isWrap","App","sliderVideos","loop","slidesPerView","spaceBetween","autoplay","delay","sliderProducts","e","map","listVideos","Boolean","window","location","hostname","match","ReactDOM","render","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b0b72be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.21f0f48b.svg\";","import Axios from 'axios'\r\n\r\nexport class VideoService {\r\n  constructor () {\r\n    this.API_KEY = process.env.REACT_APP_API_KEY\r\n    this.idVideos = []\r\n  }\r\n\r\n  async searchVideos (query) {\r\n    try {\r\n      const videos = await Axios.get('https://www.googleapis.com/youtube/v3/search', {\r\n        params: {\r\n          part: 'snippet',\r\n          type: 'video',\r\n          maxResults: 12,\r\n          q: query,\r\n          key: this.API_KEY\r\n        }\r\n      })\r\n\r\n      videos.data.items.forEach(video => {\r\n        this.idVideos.push(video.id.videoId)\r\n      })\r\n\r\n      const videosWithChannel = await this.getVideos(this.idVideos)\r\n\r\n      return videosWithChannel\r\n    } catch (e) { console.error(e) }\r\n  }\r\n\r\n  async getVideos (idVideos) {\r\n    try {\r\n      const videos = await Axios.get('https://www.googleapis.com/youtube/v3/videos', {\r\n        params: {\r\n          part: 'snippet',\r\n          id: idVideos.toString(),\r\n          key: this.API_KEY\r\n        }\r\n      })\r\n\r\n      const videosWithChannel = await this.getChannels(videos.data.items)\r\n      return videosWithChannel\r\n    } catch (e) { console.error(e) }\r\n  }\r\n\r\n  async getChannels (videos) {\r\n    try {\r\n      let idChannels = []\r\n\r\n      videos.forEach(video => {\r\n        if (video.snippet.channelId) idChannels.push(video.snippet.channelId)\r\n      })\r\n\r\n      idChannels = [...new Set(idChannels)] // Elimino duplicados\r\n\r\n      const channels = await Axios.get('https://www.googleapis.com/youtube/v3/channels', {\r\n        params: {\r\n          part: 'snippet',\r\n          id: idChannels.toString(),\r\n          key: this.API_KEY\r\n        }\r\n      })\r\n\r\n      videos.forEach(video => {\r\n        const channel = channels.data.items.filter(channel => channel.id === video.snippet.channelId)[0]\r\n\r\n        video.channel = {\r\n          id: channel.id,\r\n          thumbnail: channel.snippet.thumbnails.default.url\r\n        }\r\n      })\r\n\r\n      return videos\r\n    } catch (e) { console.error(e) }\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class Logo extends Component {\r\n  render () {\r\n    return (\r\n      <div className=\"c-logo\">\r\n        <figure>\r\n          <img src={this.props.src} alt=\"\"/>\r\n        </figure>\r\n        <p>DevFilx</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { VideoService } from '../js/services/Video.service'\r\n\r\nexport class Search extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      videos: []\r\n    }\r\n  }\r\n\r\n  async handleFormSearch (event) {\r\n    if (event.key === 'Enter') {\r\n      const videoService = new VideoService()\r\n      const videos = await videoService.searchVideos(event.target.value)\r\n\r\n      return this.props.search(videos)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"c-search\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder={this.props.placeholder}\r\n          onKeyDown={this.handleFormSearch.bind(this)} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class Avatar extends Component {\r\n  render () {\r\n    return (\r\n      <figure className={`c-avatar ${this.props.className}`}>\r\n        <img src={this.props.avatar} alt=\"\"/>\r\n      </figure>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Avatar } from '../components/Avatar'\r\n\r\nexport class ProfileMenu extends Component {\r\n  render () {\r\n    return (\r\n      <div className=\"c-profile-menu\">\r\n        <a href=\"/perfil.html\">\r\n          <Avatar avatar={this.props.avatar}/>\r\n        </a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { Logo } from '../components/Logo'\r\nimport { Search } from '../components/Search'\r\nimport { ProfileMenu } from '../components/ProfileMenu'\r\nimport logo from '../img/logo.svg'\r\n\r\nconst avatar = 'https://instagram.faep9-2.fna.fbcdn.net/vp/5956f1936ba9f64336798efd4e180999/5E7472CC/t51.2885-19/s150x150/66427814_2350657645222883_4660649448760672256_n.jpg?_nc_ht=instagram.faep9-2.fna.fbcdn.net'\r\n\r\nexport class Header extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      name: 'nombre'\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <section className=\"l-section u-index--20 bg--secondary\">\r\n        <header className=\"c-header\">\r\n          {/* <button className=\"c-button--menu\"></button> */}\r\n\r\n          <a href=\"/\">\r\n            <Logo src={logo} />\r\n          </a>\r\n\r\n          <Search search={this.props.search} placeholder=\"¿Que estas buscando?\" />\r\n\r\n          <ProfileMenu name={this.state.name} avatar={avatar} />\r\n        </header>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Swiper from 'swiper'\r\n\r\nexport default class Slider extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      slider: {}\r\n    }\r\n  }\r\n\r\n  setSlider () {\r\n    this.setState({\r\n      slider: new Swiper(`#${this.props.sliderID}`, this.props.config)\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setSlider() // Instancia del slider.\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    this.state.slider.update() // Actualizo la instancia para que funcione correctamente.\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <section id={this.props.sliderID} className=\"swiper-container\">\r\n        <div className=\"swiper-wrapper\">\r\n          {this.props.children}\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { wrapText } from '../js/utils/wrapText'\r\nimport { Avatar } from './Avatar'\r\n\r\nexport default class Card extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.NO_DESCRIPTION = 'Este video no contiene descripción'\r\n    this.state = {\r\n      video: {\r\n        id: this.props.data.id,\r\n        link: `https://www.youtube.com/watch?v=${this.props.data.id}`,\r\n        title: this.props.data.snippet.title,\r\n        description: this.computedDescription(this.props.data.snippet.description),\r\n        thumbnail: this.props.data.snippet.thumbnails.high.url,\r\n        tag: this.computedTags(),\r\n        channel: {\r\n          id: this.props.data.channel.id,\r\n          thumbnail: this.props.data.channel.thumbnail,\r\n          link: `https://www.youtube.com/channel/${this.props.data.channel.id}`\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  computedTags () {\r\n    if (this.props.data.snippet.tags) {\r\n      return this.props.data.snippet.tags[0]\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  hasTag (tag) {\r\n    if (tag !== null) {\r\n      return tag\r\n    } else {\r\n      return 'sin tag'\r\n    }\r\n  }\r\n\r\n  computedDescription (description) {\r\n    description !== ''\r\n      ? description = wrapText(description, 100)\r\n      : description = this.NO_DESCRIPTION\r\n\r\n    return description\r\n  }\r\n\r\n  render () {\r\n    const { video } = this.state\r\n\r\n    return (\r\n      <article className={`${this.props.className} c-card`}>\r\n        <div>\r\n          <a href={video.link} className=\"c-card__image\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <figure>\r\n              <img src={video.thumbnail} alt={video.title}/>\r\n            </figure>\r\n          </a>\r\n\r\n          <div className=\"c-card__info\">\r\n            <h4>\r\n              <a href={video.link} target=\"_blank\" rel=\"noopener noreferrer\">{video.title}</a>\r\n            </h4>\r\n            <p>{video.description}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"c-card__footer u-border-top\">\r\n          <a href=\"/\" className=\"c-card__tag\">\r\n            <p>{this.hasTag(video.tag)}</p>\r\n          </a>\r\n\r\n          <a href={video.channel.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Avatar className=\"c-card__author\" avatar={video.channel.thumbnail}/>\r\n          </a>\r\n        </div>\r\n      </article>\r\n    )\r\n  }\r\n}\r\n","export function wrapText (text, count) {\r\n  return `${text.slice(0, count).trim()}...`\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Container (props) {\r\n  function isWrap () {\r\n    if (props.wrap !== undefined) {\r\n      return 'l-container'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className={`l-section ${props.className}`}>\r\n      <div className={isWrap()}>\r\n        {props.children}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../scss/app.scss'\r\nimport { VideoService } from '../js/services/Video.service'\r\nimport { Header } from '../components/Header'\r\nimport Slider from '../components/Slider'\r\nimport Card from '../components/Card'\r\nimport Container from '../components/Container'\r\n\r\nexport class App extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      videos: [],\r\n      sliderVideos: {\r\n        loop: true,\r\n        slidesPerView: 4,\r\n        spaceBetween: 20,\r\n        autoplay: {\r\n          delay: 1000\r\n        }\r\n      },\r\n      sliderProducts: {\r\n        loop: true,\r\n        slidesPerView: 2,\r\n        spaceBetween: 20,\r\n        autoplay: {\r\n          delay: 1000\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount () {\r\n    try {\r\n      const videoService = new VideoService()\r\n      const videos = await videoService.searchVideos()\r\n\r\n      this.setState({\r\n        videos\r\n      })\r\n    } catch (e) { console.error(e) }\r\n  }\r\n\r\n  async searchVideos (videos) {\r\n    try {\r\n      this.setState({\r\n        videos\r\n      })\r\n    } catch (e) { console.error(e) }\r\n  }\r\n\r\n  listVideos () {\r\n    return this.state.videos.map((video) =>\r\n      <Card key={video.id} data={video} className=\"swiper-slide\" />\r\n    )\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <>\r\n        <Header search={this.searchVideos.bind(this)} />\r\n\r\n        <Container wrap className=\"u-margin-vertical--lg\">\r\n          <Slider sliderID=\"sliderVideos\" videos={this.state.videos} config={this.state.sliderVideos}>\r\n            { this.listVideos() }\r\n          </Slider>\r\n        </Container>\r\n\r\n        <Container wrap className=\"u-margin-vertical--lg\">\r\n          <Slider sliderID=\"sliderVideos2\" videos={this.state.videos} config={this.state.sliderVideos}>\r\n            { this.listVideos() }\r\n          </Slider>\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './scss/app.scss'\r\nimport { App } from './views/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))\r\n\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}